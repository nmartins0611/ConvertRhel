---
- hosts: dev
  become: yes
  strategy: free

  # You may modify these to fit your environment or use ansible-playbook --extra-vars
  # to override them if needed.
  vars:
    rhsm_username:
    rhsm_password:
    skip_os_version_check: false
    SSLCACERT: "https://ftp.redhat.com/redhat/convert2rhel/redhat-uep.pem"


  tasks:

#    - name: Validate Distribution (CentOS or Oracle Linux) and version
#      fail:
#        msg: "Distribution must be CentOS or Oracle Linux"
#      when: ansible_distribution != 'CentOS' and ansible_distribution != 'OracleLinux'

    - name: Download Red Hat GPG key
      get_url:
        url:  https://www.redhat.com/security/data/fd431d51.txt
        dest: "/etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release"

    # added for RHELDST-7822
    - name: Create rhsm/ca directory
      file:
        path: "/etc/rhsm/ca"
        state: directory
        owner: "root"
        group: "root"
        mode: '755'
        setype: "rhsmcertd_config_t"

    # added for RHELDST-7822
    - name: Download Red Hat SSL CA Cert
      get_url:
        url: "{{ SSLCACERT }}"
        dest: "/etc/rhsm/ca/redhat-uep.pem"

    - name: Add Convert2RHEL yum repository from Red Hat
      yum_repository:
        name: convert2rhel
        description: Convert2RHEL for OS {{ ansible_distribution_major_version }}
        baseurl: "https://cdn.redhat.com/content/public/convert2rhel/{{ ansible_distribution_major_version }}/x86_64/os/"
        enabled: yes
        gpgcheck: yes
        gpgkey: "file:///etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release"
        sslcacert: "/etc/rhsm/ca/redhat-uep.pem"

    - name: Install Convert2RHEL
      yum:
        name: convert2rhel

    - name: Running convert2rhel with password file
      block:
        - name: Run Convert2RHEL
          command: >
            sudo convert2rhel  -u "{{ rhsm_username }}" --password "{{ rhsm_password }}" --pool 8a85f99c7d76f2fd017d96c3c38d0663 --debug -y

    - name: Reboot the machine
      reboot:
        reboot_timeout: 100
    
    # - name: Wait for the reboot and reconnect 
    #   wait_for:
    #    port: 22
    #    host: '{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}'
    #    search_regex: OpenSSH
    #    delay: 10
    #    timeout: 60
    #   connection: local
